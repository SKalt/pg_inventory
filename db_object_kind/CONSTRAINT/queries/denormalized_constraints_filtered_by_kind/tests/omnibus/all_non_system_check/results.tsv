schema_name	name	is_deferrable	is_deferred_by_default	is_validated	is_local	not_inheritable	table_schema	table_name	parent_constraint_schema	parent_constraint	constraint_def	type_schema	type_name	n_ancestor_constraints	constrained_column_numbers	per_column_exclusion_operator_oids	comment
composite_type_examples	check_f1_gt_1	false	false	true	true	false	composite_type_examples	ordinary_table			CHECK ((basic_).f1 > 1)			0	{1}		
composite_type_examples	check_f1_gt_1	false	false	true	false	false	composite_type_examples	inherited_table			CHECK ((basic_).f1 > 1)			1	{1}		
composite_type_examples	check_f1_gt_1_again	false	false	true	false	false	composite_type_examples	inherited_table			CHECK ((_basic).f1 > 1)			1	{2}		
composite_type_examples	check_f1_gt_1_again	false	false	true	true	false	composite_type_examples	ordinary_table			CHECK ((_basic).f1 > 1)			0	{2}		
composite_type_examples	check_nested_f1_gt_1	false	false	true	false	false	composite_type_examples	inherited_table			CHECK ((nested).foo.f1 > 1)			1	{3}		
composite_type_examples	check_nested_f1_gt_1	false	false	true	true	false	composite_type_examples	ordinary_table			CHECK ((nested).foo.f1 > 1)			0	{3}		
composite_type_examples	check_nested_f1_gt_1_again	false	false	true	true	false	composite_type_examples	ordinary_table			CHECK ((_nested).foo.f1 > 1)			0	{4}		
composite_type_examples	check_nested_f1_gt_1_again	false	false	true	false	false	composite_type_examples	inherited_table			CHECK ((_nested).foo.f1 > 1)			1	{4}		
domain_examples	check_postal_code_regex	false	false	true	true	false					CHECK (VALUE ~ '^\d{5}$'::text OR VALUE ~ '^\d{5}-\d{4}$'::text)	domain_examples	us_postal_code	0			
domain_examples	should_be_even	false	false	true	true	false					CHECK (domain_examples.is_even(VALUE))	domain_examples	positive_even_number	0			
domain_examples	should_be_positive	false	false	true	true	false					CHECK (domain_examples.is_positive(VALUE))	domain_examples	positive_number	0			
foreign_db_example	imaginary_table_id_gt_1	false	false	true	true	false	foreign_db_example	technically_doesnt_exist			CHECK (id > 1)			0	{1}		
foreign_db_example	positive_number_check	false	false	true	true	false					CHECK (foreign_db_example.is_positive(VALUE))	foreign_db_example	positive_number	0			
