schema_oid	schema_name	function_oid	function_name	owner_oid	owner_name	access_privileges	language_oid	estimated_execution_cost	estimated_n_rows	arg_array_type_oid	planner_support_fn_oid	volatility	parallelizability	is_security_definer	has_no_side_effects	is_strict	returns_a_set	n_args	n_args_with_defaults	return_type_oid	call_signature	return_signature	fn_src	how_to_invoke	runtime_config_vars
16433	agg_ex	16673	avg_finalfn	10	postgres		13744	100	0	0	-	v	u	false	false	false	false	1	0	23	state agg_ex.avg_state	integer	"\nbegin\n	if state is null then\n		return NULL;\n	else\n		return state.total / state.count;\n	end if;\nend\n"		
16433	agg_ex	16674	avg_transfn	10	postgres		13744	100	0	0	-	v	u	false	false	false	false	2	0	16590	state agg_ex.avg_state, n integer	agg_ex.avg_state	"\ndeclare new_state agg_ex.avg_state;\nbegin\n	raise notice 'agg_ex.avg_transfn called with %', n;\n	if state is null then\n		if n is not null then\n			new_state.total := n;\n			new_state.count := 1;\n			return new_state;\n		end if;\n		return null;\n	elsif n is not null then\n		state.total := state.total + n;\n		state.count := state.count + 1;\n		return state;\n	end if;\n\n	return null;\nend\n"		
16433	agg_ex	16675	sum_finalfn	10	postgres		13744	100	0	0	-	v	u	false	false	false	false	1	0	23	state agg_ex.avg_state	integer	"\nbegin\n	if state is null then\n		return NULL;\n	else\n		return state.total;\n	end if;\nend\n"		
16435	base_type_examples	16592	base_fn_in	10	postgres		12	1	0	0	-	i	u	false	false	true	false	1	0	16591	cstring	base_type_examples.base_type	boolin		
16435	base_type_examples	16593	base_fn_out	10	postgres		12	1	0	0	-	i	u	false	false	true	false	1	0	2275	base_type_examples.base_type	cstring	boolout		
16435	base_type_examples	16676	fake_op	10	postgres		14	100	0	0	-	i	u	false	false	false	false	2	0	16	point, base_type_examples.int42	boolean	" select true "		
16435	base_type_examples	16677	get_default_test	10	postgres		14	100	1000	0	-	v	u	false	false	false	true	0	0	16605		SETOF base_type_examples.default_test_row	\n  SELECT * FROM base_type_examples.default_test;\n		
16435	base_type_examples	16596	int42_in	10	postgres		12	1	0	0	-	i	u	false	false	true	false	1	0	16595	cstring	base_type_examples.int42	int4in		
16435	base_type_examples	16597	int42_out	10	postgres		12	1	0	0	-	i	u	false	false	true	false	1	0	2275	base_type_examples.int42	cstring	int4out		
16435	base_type_examples	16607	myvarcharin	10	postgres		12	1	0	0	-	i	s	false	false	true	false	3	0	16606	cstring, oid, integer	base_type_examples.myvarchar	varcharin		
16435	base_type_examples	16608	myvarcharout	10	postgres		12	1	0	0	-	i	s	false	false	true	false	1	0	2275	base_type_examples.myvarchar	cstring	varcharout		
16435	base_type_examples	16609	myvarcharrecv	10	postgres		12	1	0	0	-	s	s	false	false	true	false	3	0	16606	internal, oid, integer	base_type_examples.myvarchar	varcharrecv		
16435	base_type_examples	16610	myvarcharsend	10	postgres		12	1	0	0	-	s	s	false	false	true	false	1	0	17	base_type_examples.myvarchar	bytea	varcharsend		
16435	base_type_examples	16600	text_w_default_in	10	postgres		12	1	0	0	-	i	u	false	false	true	false	1	0	16599	cstring	base_type_examples.text_w_default	textin		
16435	base_type_examples	16601	text_w_default_out	10	postgres		12	1	0	0	-	i	u	false	false	true	false	1	0	2275	base_type_examples.text_w_default	cstring	textout		
16437	composite_type_examples	16678	get_basic	10	postgres		14	100	1000	0	-	v	u	false	false	false	true	0	0	16617		SETOF composite_type_examples.basic_comp_type	\n  SELECT f1, f2 FROM composite_type_examples.equivalent_rowtype\n		
16439	create_cast	16671	transmogrify	10	postgres		14	100	0	0	-	i	u	false	false	false	false	1	0	23	input create_cast.abc	integer	\n  SELECT 1;\n		
16440	domain_examples	16639	is_even	10	postgres		14	100	0	0	-	i	u	false	false	false	false	1	0	16	i domain_examples.positive_number	boolean	\n  SELECT (i % 2) = 0\n		
16440	domain_examples	16635	is_positive	10	postgres		14	100	0	0	-	i	u	false	false	false	false	1	0	16	i integer	boolean	\n  SELECT i > 0\n		
16441	enum_example	16679	make_bug_info	10	postgres		14	100	0	0	-	i	u	false	false	false	false	2	0	16663	status enum_example.bug_status, severity enum_example.bug_severity	enum_example.bug_info	\n    SELECT status, severity\n  		
16441	enum_example	16680	should_raise_alarm	10	postgres		14	100	0	0	-	i	u	false	false	false	false	1	0	16	info enum_example.bug_info	boolean	\n    SELECT info.status = 'new' AND info.severity = 'high'\n  		
16442	extension_example	16681	_hstore	10	postgres		13744	100	0	0	-	i	u	false	false	true	false	1	0	16454	r record	extension_example.hstore	\n    BEGIN\n      return extension_example.hstore(r);\n    END;\n  		
16443	fn_examples	16682	depends_on_table_column	10	postgres		14	100	0	0	-	v	u	false	false	false	false	0	0	23		integer	\n  SELECT id FROM fn_examples.ordinary_table LIMIT 1\n		
16443	fn_examples	16683	depends_on_table_column_type	10	postgres		14	100	0	0	-	v	u	false	false	false	false	0	0	23		integer	\n    SELECT id FROM fn_examples.ordinary_table LIMIT 1\n  		
16443	fn_examples	16687	depends_on_table_rowtype	10	postgres		14	100	0	0	-	v	u	false	false	false	false	0	0	16686		fn_examples.ordinary_table	\n  SELECT * FROM fn_examples.ordinary_table LIMIT 1\n		
16443	fn_examples	16688	depends_on_view_column	10	postgres		14	100	0	0	-	v	u	false	false	false	false	0	0	23		integer	\n  SELECT id FROM fn_examples.basic_view LIMIT 1\n		
16443	fn_examples	16689	depends_on_view_column_type	10	postgres		14	100	0	0	-	v	u	false	false	false	false	0	0	23		integer	\n  SELECT id FROM fn_examples.basic_view LIMIT 1\n		
16443	fn_examples	16691	is_even	10	postgres		13744	100	0	0	-	v	u	false	false	false	false	1	0	16	i integer	boolean	\nBEGIN\n  IF i % 2 = 0 THEN\n    RETURN true;\n  ELSE\n    RETURN false;\n  end if;\nEND;\n		
16443	fn_examples	16692	is_odd	10	postgres		14	100	0	0	-	v	u	false	false	false	false	1	0	16	i integer	boolean	\n  SELECT (fn_examples.is_even(i) IS NOT true)\n		
16443	fn_examples	16693	polyf	10	postgres		14	100	0	0	-	v	u	false	false	false	false	1	0	2283	x anyelement	anyelement	\n  select x + 1\n		
16444	foreign_db_example	16667	is_positive	10	postgres		14	100	0	0	-	i	u	false	false	false	false	1	0	16	i integer	boolean	\n  SELECT i > 0\n		
2200	public	16694	log_table_alteration	10	postgres		13744	100	0	0	-	v	u	false	false	false	false	0	0	3838		event_trigger	\nBEGIN\n  RAISE NOTICE 'command % issued', tg_tag;\nEND;\n		
16447	regress_rls_schema	16695	f_leak	10	postgres		13744	1e-07	0	0	-	v	u	false	false	false	false	1	0	16	text	boolean	BEGIN RAISE NOTICE 'f_leak => %', $1; RETURN true; END		
16447	regress_rls_schema	16696	op_leak	16408	regress_rls_alice		13744	100	0	0	-	v	u	false	false	false	false	2	0	16	integer, integer	boolean	BEGIN RAISE NOTICE 'op_leak => %, %', $1, $2; RETURN $1 < $2; END		
16449	trigger_test	16697	check_account_update	10	postgres		13744	100	0	0	-	v	u	false	false	false	false	0	0	2279		trigger	\n    BEGIN\n      RAISE NOTICE 'trigger_func(%) called: action = %, when = %, level = %, old = %, new = %',\n                        TG_ARGV[0], TG_OP, TG_WHEN, TG_LEVEL, OLD, NEW;\n      RETURN NULL;\n    END;\n  		
16449	trigger_test	16698	log_account_update	10	postgres		13744	100	0	0	-	v	u	false	false	false	false	0	0	2279		trigger	\n    BEGIN\n      INSERT INTO trigger_test.update_log(account_id) VALUES (1);\n      RETURN NULL;\n    END;\n  		
16449	trigger_test	16699	view_insert_row	10	postgres		13744	100	0	0	-	v	u	false	false	false	false	0	0	2279		trigger	\n    BEGIN\n      INSERT INTO trigger_test.accounts(id, balance) VALUES (NEW.id, NEW.balance);\n      RETURN NEW;\n    END;\n  		
